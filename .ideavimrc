Plug 'preservim/nerdtree'
Plug 'tpope/vim-surround'
Plug 'terryma/vim-multiple-cursors'

set scrolloff=999
set ignorecase smartcase
set showmode
set history=1000
set incsearch
set hls
set clipboard+=unnamedplus
set relativenumber
set number
set visualbell
set idearefactormode=keep
set showcmd
set showmode
" extensions
set surround
set multicursor
set highlightedyank
set NERDTree
set argtextobj

" register leader
let mapleader = " "

" clear search
nnoremap <esc> :noh<return><esc>

" Change line, better use S for this.
nmap cc 1S

" Copy Word
nmap ,c yiw

" Select word
nmap ,v viw

" Delete word without yanking
nnoremap d "_d
vnoremap d "_d

" Yanking and Deleting
vnoremap J :m '>+1<CR>gv=gv
vnoremap K :m '<-2<CR>gv=gv
nnoremap J mzJ`z

" replace currently selected text with default register
" without yanking it
vnoremap <leader>p "_dP

" Center screen when jumping to next match
nnoremap n nzz
nnoremap N Nzz
vnoremap n nzz
vnoremap N Nzz

" Center screen when moving up and down
nnoremap <C-u> <C-u>zz
nnoremap <C-o> <C-d>zz
vnoremap <C-u> <C-u>zz
vnoremap <C-o> <C-d>zz

" easy window navigation
" nnoremap <a-k> gT
" nnoremap <a-j> gt
nnoremap <tab> gt
nnoremap <s-tab> gT

" Navigate Window
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l

" Resize Window
nmap <leader>m <Action>(MaximizeEditorInSplit)

" Save File
nnoremap <leader>w <Action>(SaveDocument)

" clear the search buffer when hitting return
nnoremap <leader><cr> :nohlsearch<cr>

" nerdtree
" map <leader>_ :nerdtree<cr>

" multiple cursors
map mc <a-n>
map mx <a-x>
map mp <a-p>

" find and replace
:map <leader>fw <action>(Find)
:map <leader>fr <action>(Replace)
:map <leader>fg <action>(FindInPath)
:map <leader>fR <action>(ReplaceInPath)

" new class
:nmap <leader>cn <action>(NewElement)

" code refactoring
:map <leader>fc <action>(ReformatCode)
:map <leader>scw <action>(SurroundWith)
:map <leader>dcw <action>(Unwrap)
:map <leader>oi <action>(OptimizeImports)

" preview code
:map <leader>gpd <action>(QuickImplementations)

" breakpoints
:map <leader>bb <action>(ToggleLineBreakpoint)
:map <leader>bs <action>(ViewBreakpoints)
:map <leader>br <action>(Debugger.RemoveAllBreakpoints)

" comment out
:map gcc <action>(CommentByLineComment)
:map gcb <action>(CommentByBlockComment)

" code navigation
:map ]d <action>(GotoNextError)
:map [d <action>(GotoPreviousError)
:map <leader>_ <action>(SelectInProjectView)
:map <leader>fs <action>(FileStructurePopup)
:map <leader>es <action>(EditSource)

" splits
:nmap <leader>\ <action>(SplitVertically)
:nmap <leader>- <action>(SplitHorizontally)
:nmap <leader>wmo <action>(MoveEditorToOppositeTabGroup)

" git
:map <leader>gq <action>(CloseContent)
:map <leader>gr <action>(Vcs.RollbackChangedLines)
:map <leader>gc <action>(Compare.SameVersion)
:map <leader>gfh <action>(Vcs.ShowTabbedFileHistory)
:map ]h <action>(NextDiff)
:map [h <action>(PreviousDiff)
:map ]f <action>(Diff.NextChange)
:map [f <action>(Diff.PrevChange)

" built-in navigation to navigated items works better
:nmap <c-o> <action>(Back)
:nmap <c-i> <action>(Forward)

" but preserve ideavim defaults
:map g<c-o> <c-o>
:map g<c-i> <c-i>

" close stuff
:map <leader>bd <action>(CloseEditor)
:map <leader>bD <action>(CloseAllEditors)

" reactivate some idea shortcuts
:map <leader>fg <action>(SearchEverywhere)
:map <leader>ff <action>(GotoFile)
:map <leader>fa <action>(GotoAction)
:map <leader>ra <action>(RunAnything)
:map <leader>fb <action>(RecentFiles)
:map grn <action>(RenameElement)
:map grr <action>(ShowUsages)
:map grd <action>(GotoDeclaration)
:map gri <action>(GotoImplementation)
:map grD <action>(GotoTypeDeclaration)
:map gra <action>(Generate)

" run
:map <leader>rc <action>(ChooseRunConfiguration)
:map <leader>cdg <action>(ChooseDebugConfiguration)
:map <leader>1 <action>(Run)
:map <leader>2 <action>(Debug)
:map <leader>0 <action>(Stop)

" debug
nmap <leader>db <action>(ToggleLineBreakpoint)
nmap <leader>dc <action>(Resume)
nmap <leader>do <action>(StepOver)
nmap <leader>di <action>(StepInto)
nmap <leader>dO <action>(StepOut)
nmap <leader>dB <action>(EvaluateExpression)
nmap <leader>dC <action>(RunToCursor)

" terminal
:nmap <c-\> <action>(ActivateTerminalToolWindow)

" source
nnoremap <leader>si :source ~/.ideavimrc<cr>
